#include "vjtag.h"
#include "dtm.h"
#include "dm.h"

declare DE10 {
	input SW[10];
	output LEDR[10];
}
module DE10 {
	vjtag vjtag0;
	dtm riscv_dtm;
	dm riscv_dm;

	riscv_dtm.m_clock = vjtag0.tck;
	riscv_dtm.p_reset = p_reset;
	riscv_dtm.ir_in = vjtag0.ir_in;
	vjtag0.ir_out = riscv_dtm.ir_out;
	riscv_dtm.tdi = vjtag0.tdi;
	vjtag0.tdo = riscv_dtm.tdo;

	riscv_dm.m_clock = vjtag0.tck;
	riscv_dm.p_reset = p_reset;

	func vjtag0.virtual_state_cdr {
		riscv_dtm.virtual_state_cdr();
	}
	func vjtag0.virtual_state_sdr {
		riscv_dtm.virtual_state_sdr();
	}
	func vjtag0.virtual_state_udr {
		riscv_dtm.virtual_state_udr();
	}
	func vjtag0.virtual_state_cir {
		riscv_dtm.virtual_state_cir();
	}
	func vjtag0.virtual_state_uir {
		riscv_dtm.virtual_state_uir();
	}
	func riscv_dtm.read {
		riscv_dm.read(riscv_dtm.addr);
	}
	func riscv_dtm.write {
		riscv_dm.write(riscv_dtm.addr, riscv_dtm.wdata);
	}
	func riscv_dm.ready {
		riscv_dtm.rdata = riscv_dm.rdata;
		riscv_dtm.ready();
	}

#ifdef DEBUG
	any {
		SW == 0: LEDR = riscv_dtm.debug_out;
		SW == 1: LEDR = riscv_dm.debug_out;
		else:	LEDR = 0xffffffff;
	}
#endif
}

